syntax = "proto3";

package echo;

option go_package = "api/proto";

import "protoc-gen-swagger/options/annotations.proto";

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
  
  info: {
    title: "Service Template API"
    description: "A service template using gRPC and gRPC Gateway"
    version: "1.0"
    contact: {
      url: "https://developer.alexkappa.com/api"
      email: "me@alexkappa.com"
    }
  }
  
  security_definitions: {
    security: {
      key: "OAuth2"
      value: {
        type: TYPE_OAUTH2
        flow: FLOW_ACCESS_CODE
        authorization_url: "https://api.example.com/oauth/authorize"
        token_url: "https://api.example.com/oauth/token"
        scopes: {
          scope: {
            key: "echo"
            value: "Echo"
          }
        }
      }
    }
  }
  
  responses: {
		key: "403"
		value: {
			description: "Returned when the user does not have permission to access the resource."
		}
	}
  
  responses: {
		key: "404"
		value: {
			description: "Returned when the resource does not exist."
		}
	}
};